services:

  # Postgres Database Service
  db:
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend Service
  srvback:
    build:
      context: ./srvback
      dockerfile: Dockerfile
    image: repoklin-backend:local
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      JAVA_OPTS: ${JAVA_OPTS}
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/actuator/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Frontend Service
  appfront:
    build:
      context: ./appfront
      dockerfile: Dockerfile
    image: repoklin-frontend:local
    ports:
      - "8081:80"
    environment:
      - API_URL=${FRONTEND_API_URL}
    depends_on:
      - srvback

volumes:
  db-data: